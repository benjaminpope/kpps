#!/usr/bin/env python
"""Gathers the auxiliary information from a set of MAST fits files into a Pandas table.
"""
from __future__ import division
import sys
import numpy as np
import pyfits as pf
import pandas as pd

from os.path import join, abspath, basename, exists
from argparse import ArgumentParser
from glob import glob

from numpy import arange, zeros, transpose

if __name__ == '__main__':
    ap = ArgumentParser()
    ap.add_argument('hdfname')
    ap.add_argument('datadir_raw')
    ap.add_argument('datadir_red')
    args = ap.parse_args()

    if not exists(args.hdfname):
        print 'The input hdf file does not exist'
        exit(1)
        
    df = pd.read_hdf(args.hdfname,'planet_search')
    df = df.sort('epic', ascending=True)
    df = pd.DataFrame(df[df.columns[1:]].values, index=df.epic.values, columns=df.columns[1:])
    
    files_raw = sorted(glob(join(args.datadir_raw,'ktwo*.fits')))
    files_red = sorted(glob(join(args.datadir_red,'EPIC_*.fits')))
    epics = np.array(map(lambda fn:int(basename(fn).split('_')[1]), files_red), dtype=np.uint32)

    ps, ks, cdppr, cdppt, cdppc = [], [], [], [], []
    nfiles = len(files_raw)
    for ifile, (fna,fnb) in enumerate(zip(files_raw,files_red)):
        with pf.open(fna) as hdul:
            ks.append(hdul[1].header['inj_k'])
            ps.append(hdul[1].header['inj_per'])
        with pf.open(fnb) as hdul:
            cdppr.append(hdul[1].header['cdpp1r'])
            cdppt.append(hdul[1].header['cdpp1t'])
            cdppc.append(hdul[1].header['cdpp1c'])
        print '{:d}/{:d}'.format(ifile,nfiles)

    df_aux = pd.DataFrame(transpose([ks,ps,cdppr,cdppt,cdppc]), 
                          columns='RpRs period cdppr cdppt cdppc'.split(),
                          index=epics, dtype=np.float32)
    hdf = pd.HDFStore(args.hdfname, mode='r+')
    hdf['aux_data'] = df_aux
    hdf.close()
